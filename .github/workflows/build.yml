name: Dev Snapshot Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release
  PICO_SDK_PATH: ${{github.workspace}}/.pico-sdk

jobs:
  setup:
    runs-on: ubuntu-latest
    name: Setup Build Environment
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - name: Cache Pico SDK
        id: cache-pico-sdk
        uses: actions/cache@v3
        with:
          path: ${{github.workspace}}/.pico-sdk
          key: ${{ runner.os }}-pico-sdk-v2.1.1-${{ hashFiles('pico_sdk_import.cmake') }}
          
      - name: Clone Pico SDK
        if: steps.cache-pico-sdk.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          submodules: recursive
          repository: raspberrypi/pico-sdk
          ref: 2.1.1
          path: .pico-sdk

      - name: Create SDK cache
        uses: actions/cache@v3
        with:
          path: |
            ${{github.workspace}}/.pico-sdk
          key: ${{ runner.os }}-pico-toolchain-sdk-${{ hashFiles('pico_sdk_import.cmake') }}

  build:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        board: [
          { name: "pico_w", platform: "rp2040", board_type: "pico_w" },
          { name: "pico2_w", platform: "rp2350-arm-s", board_type: "pico2_w" }
        ]
      fail-fast: false

    name: Build for ${{ matrix.board.name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Arm GNU Toolchain
        id: arm-none-eabi-gcc-action
        uses: carlosperate/arm-none-eabi-gcc-action@v1
        with:
          release: '14.2.Rel1'

      - name: Restore SDK
        uses: actions/cache@v3
        with:
          path: |
            ${{github.workspace}}/.pico-sdk
          key: ${{ runner.os }}-pico-toolchain-sdk-${{ hashFiles('pico_sdk_import.cmake') }}
      
      - name: Cache build directory
        uses: actions/cache@v3
        with:
          path: ${{github.workspace}}/build-${{ matrix.board.name }}
          key: ${{ runner.os }}-build-${{ matrix.board.name }}-${{ hashFiles('**/*.cpp', '**/*.h', '**/*.c', 'CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ matrix.board.name }}-
      
      - name: Configure CMake
        run: |
            cmake -B ${{github.workspace}}/build-${{ matrix.board.name }} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        env:
          PICO_PLATFORM: ${{ matrix.board.platform }}
          PICO_BOARD: ${{ matrix.board.board_type }}
          
      - name: Build
        run: |
            cmake --build ${{github.workspace}}/build-${{ matrix.board.name }} --config ${{env.BUILD_TYPE}} -j$(nproc)
        
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: PiCCANTE-${{ matrix.board.name }}-Snapshot
          path: ${{github.workspace}}/build-${{ matrix.board.name }}/PiCCANTE.*