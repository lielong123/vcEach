name: Release

on:
    push:
      tags:
        - 'v*.*.*'

permissions:
  contents: write

env:
  BUILD_TYPE: Release
  PICO_SDK_PATH: ${{github.workspace}}/.pico-sdk  


jobs:
  build:
    uses: ./.github/workflows/build_base.yml
    with:
        artifact_suffix: "-Release"
        upload_artifacts: true  

  generate-changelog:
    name: Generate Changelog
    needs: build
    uses: ./.github/workflows/generate-changelog.yml
    with:
        mode: release
        tag_name: ${{ github.ref_name }}

  create-release:
    name: Create Release
    needs: [build, generate-changelog]
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: Organize and rename artifacts
        run: |
            mkdir -p release_files
            # Loop through each board's artifact folder
            for dir in artifacts/*; do
            if [ -d "$dir" ]; then
                board_name=$(basename "$dir" | sed 's/PiCCANTE-\(.*\)-Release/\1/')
                echo "Processing board: $board_name"
                
                for file in "$dir"/*; do
                if [ -f "$file" ]; then
                    filename=$(basename "$file")
                    extension="${filename##*.}"
                    basename="${filename%.*}"
                    new_filename="${basename}-${board_name}.${extension}"
                    cp "$file" "release_files/$new_filename"
                    echo "Renamed: $filename -> $new_filename"
                fi
                done
            fi
            done
            ls -la release_files/

      - name: Extract build info
        id: build_info
        run: |
          echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
          echo "time=$(date +'%H%M')" >> $GITHUB_OUTPUT
          echo "sha=$(echo ${GITHUB_SHA} | cut -c1-7)" >> $GITHUB_OUTPUT
          
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

          GIT_VERSION=$(git describe --tags --match "v[0-9]*.[0-9]*.[0-9]*" --always)
          if [[ ! $GIT_VERSION =~ ^v[0-9]+\.[0-9]+\.[0-9]+ ]]; then
          COMMIT_COUNT=$(git rev-list --count HEAD)
          GIT_VERSION="v0.0.0-${COMMIT_COUNT}-${GITHUB_SHA:0:7}"
          fi
          echo "version=$GIT_VERSION" >> $GITHUB_OUTPUT
          echo "Version from git: $GIT_VERSION"
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.build_info.outputs.tag_name }}
          name: "Release ${{ steps.build_info.outputs.version }}"
          body: |
            ## PiCCANTE Release ${{ steps.build_info.outputs.version }}
            
            Release Date: ${{ steps.build_info.outputs.date }} ${{ steps.build_info.outputs.time }}
            
            Please see the [documentation](https://github.com/${{ github.repository }}/wiki) for installation instructions.
            
            ### Changes
            
            ${{ needs.generate-changelog.outputs.changelog }}
            
          files: release_files/**/*
          prerelease: false
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}